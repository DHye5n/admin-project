name: Build and Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build Backend and Frontend (Spring Boot + Nginx)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Docker Hub 사용자명
          password: ${{ secrets.DOCKER_TOKEN }}  # Docker Hub Access Token

      - name: Build Docker (Backend)
        run: docker build --platform linux/amd64 -f backend/Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/dhyeon-server .

      - name: Build Docker (Frontend)
        run: docker build --platform linux/amd64 -f frontend/Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/frontend .

      - name: Push Docker (Backend)
        run: docker push ${{ secrets.DOCKER_USERNAME }}/dhyeon-server:latest

      - name: Push Docker (Frontend)
        run: docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: SSH into Server and Pull Docker Image
        uses: appleboy/ssh-action@master
        with:
          username: ubuntu
          host: ${{ secrets.EC2_IP }}  # 배포할 서버의 IP
          key: ${{ secrets.EC2_SSH_KEY }}  # 서버 SSH 키
          script: |
            # Docker image pull and restart
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/dhyeon-server:latest
            sudo docker stop dhyeon-server || true  # Stops the container if it's running
            sudo docker rm dhyeon-server || true    # Removes the container if it's stopped
            sudo docker run -d --name dhyeon-server -p 8080:8080 \
            -e DB_USERNAME=${{ secrets.DB_USERNAME }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e MAIL_USERNAME=${{ secrets.MAIL_USERNAME }} \
            -e MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }} \
            -e JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} \
            ${{ secrets.DOCKER_USERNAME }}/dhyeon-server:latest
            
            # 프론트엔드 및 Nginx 이미지 pull 및 실행
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/frontend:latest
            sudo docker stop frontend-nginx || true  # 기존 컨테이너 중지
            sudo docker rm frontend-nginx || true    # 기존 컨테이너 삭제
            sudo docker run -d --name frontend -p 80:80 \
            ${{ secrets.DOCKER_USERNAME }}/frontend:latest
